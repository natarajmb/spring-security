<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) Cognitivenode 2014. All Rights Reserved.
  ~
  ~ No part of this source code or any of its contents may be reproduced, copied,
  ~ modified or adapted, without the prior written consent of the author,
  ~ unless otherwise indicated for stand-alone materials.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <security:http use-expressions="true">
        <security:intercept-url pattern="/secure/**" access="isAuthenticated()"/>
        <security:form-login login-page="/login.do" default-target-url="/secure/authenticated.do"
                             authentication-failure-url="/login.do?error=true"/>
        <security:logout logout-success-url="/login.do"/>
        <!-- In file/memory -->
        <!--<security:remember-me key="secureVault" />-->

        <!-- JDBC-->
        <!--<security:remember-me key="secureVault" data-source-ref="dataSource"/>-->

        <!-- JPA & Hibernate -->
        <!--<security:remember-me services-ref="rememberMeServices"/>-->
    </security:http>

    <!-- In file/memory authentication -->
    <!--
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="test" password="test1234" authorities="ROLE_USER" />
                <security:user name="admin" password="nimda" authorities="ROLE_ADMIN" />
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
    -->

    <!-- JDBC security authentication -->
    <!--
    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query="select username,password, true from users where username=?"
                                        authorities-by-username-query="select username, role from user_roles where username =?"/>
        </security:authentication-provider>
    </security:authentication-manager>
    -->

    <!-- JPA & Hibernate authentication -->
    <!--
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="customerService"/>
        <security:authentication-provider ref="rememberMeAuthenticationProvider"/>
    </security:authentication-manager>

    <bean id="rememberMeAuthenticationProvider" class=
            "org.springframework.security.authentication.RememberMeAuthenticationProvider">
        <constructor-arg value="secureVault"/>
    </bean>

    <bean id="rememberMeFilter" class=
            "org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
        <constructor-arg ref="authenticationManager"/>
        <constructor-arg ref="rememberMeServices"/>
    </bean>

    <bean id="rememberMeServices"
          class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <constructor-arg value="secureVault"/>
        <constructor-arg ref="customerService"/>
        <constructor-arg ref="tokenRepository"/>
    </bean>

    <bean id="tokenRepository"
          class="com.cognitivenode.security.repository.impl.RememberMeTokenRepositoryImpl">
    </bean>
    -->

    <!-- Embedded LDAP authentication -->
    <!--
    <security:authentication-manager>
        <security:ldap-authentication-provider user-dn-pattern="uid={0},ou=people"
                                                group-search-base="ou=roles"
                                                group-search-filter="member={0}"/>
    </security:authentication-manager>

    <security:ldap-server root="dc=cognitivenode,dc=com" ldif="classpath:users.ldif"/>
    -->

    <!-- External LDAP authentication -->
    <security:authentication-manager>
        <security:ldap-authentication-provider user-dn-pattern="uid={0},ou=people"
                                               group-search-base="ou=roles"
                                               group-search-filter="member={0}"/>
    </security:authentication-manager>

    <security:ldap-server url="ldap://localhost:10389/dc=cognitivenode,dc=com"/>
    <!-- CAS authentication -->

</beans>